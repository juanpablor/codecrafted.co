{"version":3,"file":"component---src-pages-services-tsx-3929dffa462c003f31e3.js","mappings":"yQAyCA,MAjCgDA,IAAsB,IAArB,YAAEC,GAAa,EAC9D,MAAM,EAACC,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,UAAmB,KAC/C,EAAEC,IAAMC,EAAAA,EAAAA,kBAUd,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,4BACXP,EAAYQ,MAAMC,KAAI,CAACC,EAAMC,IAC5BL,EAAAA,cAAAA,KAAAA,CAAIM,IAAKD,EAAKJ,UAAU,mCACrBG,EAAKG,OACJP,EAAAA,cAAAA,KAAAA,CAAIQ,QAAS,KAAMC,OAdXC,EAcsBL,OAbpCV,EAAUgB,SAASD,GACrBd,EAAaD,EAAUiB,QAAQR,GAASA,IAASM,KAEjDd,EAAa,GAAD,eAAKD,GAAS,CAAEe,MAJZA,KAc2B,EAACT,UAAWY,EAAOC,SACnDhB,EAAG,gBAAeM,EAAKG,SAAU,IACjCZ,EAAUgB,SAASN,GAAO,IAAM,KAGpCV,EAAUgB,SAASN,IAAQD,EAAKW,MAC/Bf,EAAAA,cAAAA,IAAAA,KAAIF,EAAG,gBAAeM,EAAKW,aAK/B,EAMV,MAAMF,EAAS,CACbC,QAAS,0CCpCLE,EAAgBC,EAqBtB,MAnB0C,KACxC,MAAM,EAAEnB,IAAMC,EAAAA,EAAAA,kBAEd,OACEC,EAAAA,cAACkB,EAAAA,QAAM,CAACD,KAAMD,GACZhB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gCACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yBACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,uBAAuBH,EAAE,4BACvCE,EAAAA,cAACmB,EAAW,CAACzB,YAAasB,EAAKI,aAAaC,OAE9CrB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yBACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,uBAAuBH,EAAE,4BACvCE,EAAAA,cAACmB,EAAW,CAACzB,YAAasB,EAAKI,aAAaE,WAGzC,EAMN,MAAMC,EAAe,IAAMvB,EAAAA,cAAAA,QAAAA,KAAQgB,EAAKQ,Y","sources":["webpack://corpo-code-crafted-studios/./src/components/collapsible.tsx","webpack://corpo-code-crafted-studios/./src/pages/services.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { WebDevelopment } from \"../interfaces\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\n\ninterface CollapsibleProps {\n  development: WebDevelopment;\n}\n\nconst Collapsible: React.FC<CollapsibleProps> = ({ development }) => {\n  const [openItems, setOpenItems] = useState<number[]>([]);\n  const { t } = useTranslation();\n\n  const toggleItem = (index: number) => {\n    if (openItems.includes(index)) {\n      setOpenItems(openItems.filter((item) => item !== index));\n    } else {\n      setOpenItems([...openItems, index]);\n    }\n  };\n\n  return (\n    <div className=\"flex justify-center\">\n      <ul className=\"flex flex-col gap-4 mt-6\">\n        {development.items.map((item, idx) => (\n          <li key={idx} className=\"w-full sm:w-[430px] text-center\">\n            {item.title && (\n              <h3 onClick={() => toggleItem(idx)} className={styles.trigger}>\n                {t(`servicesPage.${item.title}`)}{\" \"}\n                {openItems.includes(idx) ? \"-\" : \"+\"}\n              </h3>\n            )}\n            {openItems.includes(idx) && item.copy && (\n              <p>{t(`servicesPage.${item.copy}`)}</p>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Collapsible;\n\nconst styles = {\n  trigger: \"p-2 rounded-lg cursor-pointer gradient\",\n};\n","import React from \"react\";\nimport Layout from \"./layout\";\nimport data from \"../data/data.json\";\nimport { Company } from \"../interfaces\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport { graphql, HeadFC, PageProps } from \"gatsby\";\nimport Collapsible from \"../components/collapsible\"; // Importa el componente\n\nconst info: Company = data;\n\nconst ServicesPage: React.FC<PageProps> = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout data={info}>\n      <div className=\"flex flex-row justify-center\">\n        <div className=\"gap-4 w-full sm:w-1/2\">\n          <h2 className=\"text-xl text-center\">{t(\"servicesPage.subtitle_1\")}</h2>\n          <Collapsible development={info.servicesPage.web} />\n        </div>\n        <div className=\"gap-4 w-full sm:w-1/2\">\n          <h2 className=\"text-xl text-center\">{t(\"servicesPage.subtitle_2\")}</h2>\n          <Collapsible development={info.servicesPage.design} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ServicesPage;\n\nexport const Head: HeadFC = () => <title>{info.companyName}</title>;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","development","openItems","setOpenItems","useState","t","useTranslation","React","className","items","map","item","idx","key","title","onClick","toggleItem","index","includes","filter","styles","trigger","copy","info","data","Layout","Collapsible","servicesPage","web","design","Head","companyName"],"sourceRoot":""}